function cost = nn_drift_cost(sub_locs_1,sub_locs_2)
% This will determine the cost of two localization sub_groups using the
% probability based nearest neighbor distances
bins = 10;
[~,nn_dist] = knnsearch(sub_locs_1,sub_locs_2);
% nn_dist(end+1) = 200;
% create bin uniform bins to determine the weighting of the nn distances
bin_width = (max(nn_dist) - min(nn_dist))/10;
frequency(1:bins,1) = 0;
which_bin = nn_dist*0;
est_bins = (nn_dist - min(nn_dist))/bin_width;
for i = 1:numel(nn_dist) % populate the histogram and keep track of where each entry bins to
    if round(est_bins(i))+1 < bins
        frequency(round(est_bins(i))+1) = frequency(round(est_bins(i))+1)+1;
        which_bin(i) = round(est_bins(i))+1;
    else
        frequency(end) = frequency(end) + 1;
        which_bin(i) = bins;
    end
end
    probability = frequency./sum(frequency);
    cost = sum(probability(which_bin).*nn_dist)/numel(nn_dist);
end

